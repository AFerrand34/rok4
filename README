A comprehensive guide for developers is available on the main documentation site: 
http://www.rok4.org/documentation


ROK4/BE4 VERSIONS
+++++++++++++++++
ROK4 Version : 0.0.0
BE4 Version :  0.0.0


BEFORE BUILDING
+++++++++++++++

For Debian-based distributions : 

1) Install a C++ compiler 
	sudo apt-get install build-essential

2) Install CMake (>2.6)
  sudo apt-get install cmake

3) Install third party libraries
	sudo apt-get install gettext
	sudo apt-get install nasm
	sudo apt-get install automake

4) Optional : Install documentation libraries
  sudo apt-get install doxygen
  sudo apt-get install graphviz
  sudo apt-get install naturaldocs

5) Install PERL and C++ libraries
  see DEPENDENCIES


BUILDING
++++++++

Inside the source folder :

	mkdir build 
	cd build 
	cmake .. [-DOPTION1 -DOPTION2]
	make 
	make [install|package]

Example
-------
	mkdir build
	cd build
	cmake -DCMAKE_INSTALL_PREFIX=$HOME/rok4/target ..
	make
	make doc
	make install

CMake Build Options
-------------------

Options are fed to CMake using the following syntax : -DOPTION

For example : cmake .. -DUNITTEST=TRUE -DBUILD_BE4=FALSE

CMAKE_INSTALL_PREFIX : 
  Installation Folder (PATH) 
  Default Value : /usr/local

DEP_PATH : 
  Path to compiled and installed ROK4 dependencies (PATH)
  Default Value : ./target
  
BUILD_DEPENDENCIES : 
  Missing ROK4 dependencies compilation (BOOL)
  These dependencies will be installed with ROK4
  Default Value : TRUE  

BUILD_ROK4 : 
  ROK4(Server) compilation (BOOL)
  Default Value : TRUE  
  
BUILD_BE4 : 
  BE4 compilation (BOOL)
  Default Value : TRUE  

BUILD_OBJECT : 
  Object storage handling compilation (BOOL)
  This option activate all parts which allowed ROK4 to handle object storage : generation and server parts
  Default Value : FALSE  

BUILD_DOC : 
  Doxygen documentation creation (BOOL)
  This option creates the "doc" target (to be used before make install or make package) : make doc
  Default Value : TRUE  

KDU_USE : 
  Kakadu library use (BOOL)
  This option allowed to build libimage with kakadu (closed-source library), to read JPEG2000 images. If not present, the open library openjpeg will be used
  Default Value : FALSE  

KDU_LIBRARY_PATH : 
  Kakadu library location (STRING)
  If kakadu is used, we can provide the path to the kakadu library (libkdu.a and libkdu_aux.a). Headers are included in the project (lib/likakadu)
  Default Value : /usr/kakadu-6.4
  
KDU_THREADING : 
  Number of threads when using Kakadu (STRING)
  If kakadu is used, we can provide the number of used thread by kakadu. 0 is no thread, 1 is mono thread, 2 and more is multi-thread
  Default Value : "0"

UNITTEST : 
  Units tests compilation (BOOL)
  This option creates the "test" target (to be used before make install or make package) :  make test 
  Default Value : FALSE 

DEBUG_BUILD : 
  Debug mode build (BOOL)
  Default Value : FALSE

RPM_PACKAGE : (EXPERIMENTAL)
  Creates a RPM package instead of a tar.gz package : make all doc package
  Default Value : FALSE 

DEB_PACKAGE : (EXPERIMENTAL)
  Creates a debian package instead of a tar.gz package (relies on the systems libraries) : make all doc package
  Default Value : FALSE 

USE_SYSTEM_LIB : (EXPERIMENTAL)
  In order to compile against the system libraries
  Default value : FALSE 

